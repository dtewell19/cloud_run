name: 'terraform plan'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest

    steps:
    - name: checkout source code
      uses: actions/checkout@v2

    - name: terraform plan & show
      id: plan_show
      run: |
        terraform init
        terraform validate -no-color
        terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}

    - name: Render terraform docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: .
        output-file: README.md
        output-method: inject
        git-push: "true"

  opa-test:
    name: 'opa test'
    runs-on: ubuntu-latest

    steps:
    - name: checkout source code
      uses: actions/checkout@v2

    - name: terraform plan & show
      id: plan_show
      run: |
        terraform init
        terraform validate -no-color
        terraform plan --out tfplan.binary
        terraform show -json tfplan.binary > tfplan.json
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
    
    - name: install conftest
      run: |
        LATEST_VERSION="$(wget -O - "https://api.github.com/repos/open-policy-agent/conftest/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c 2-)"
        wget "https://github.com/open-policy-agent/conftest/releases/download/v${LATEST_VERSION}/conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz"
        tar xzf conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz
        sudo mv conftest /usr/local/bin
    
    - name: run opa -github
      run: conftest test -o github -p "policy" --namespace "main" tfplan.json
      continue-on-error: true

    - name: run opa -junit
      run: conftest test -o junit -p "policy" --namespace "main" tfplan.json > results.xml
      continue-on-error: true

    - name: publish report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: '*.xml'
  
  terrascan_job:
    runs-on: ubuntu-latest
    name: terrascan-action

    steps:
    - name: checkout source code
      uses: actions/checkout@v2

    - name: run terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: 'v14'
        policy_type: 'gcp'
        non_recursive: true
  
  infracost:
      name: infracost
      runs-on: ubuntu-latest

      env:
        TF_ROOT: .

      steps:
        - name: Setup Infracost
          uses: infracost/actions/setup@v2
          with:
            api-key: ${{ secrets.INFRACOST_API_KEY }}

        # Checkout the base branch of the pull request (e.g. main/master).
        - name: Checkout base branch
          uses: actions/checkout@v2
          with:
            ref: '${{ github.event.pull_request.base.ref }}'

        # Generate Infracost JSON file as the baseline.
        - name: Generate Infracost cost estimate baseline
          run: |
            infracost breakdown --path=${TF_ROOT} \
                                --format=json \
                                --out-file=/tmp/infracost-base.json

        # Checkout the current PR branch so we can create a diff.
        - name: Checkout PR branch
          uses: actions/checkout@v2

        # Generate an Infracost diff and save it to a JSON file.
        - name: Generate Infracost diff
          run: |
            infracost diff --path=${TF_ROOT} \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json

        # Posts a comment to the PR using the 'update' behavior.
        # This creates a single comment and updates it. The "quietest" option.
        # The other valid behaviors are:
        #   delete-and-new - Delete previous comments and create a new one.
        #   hide-and-new - Minimize previous comments and create a new one.
        #   new - Create a new cost estimate comment on every push.
        # See https://www.infracost.io/docs/features/cli_commands/#comment-on-pull-requests for other options.
        - name: Post Infracost comment
          run: |
              infracost comment github --path=/tmp/infracost.json \
                                      --repo=$GITHUB_REPOSITORY \
                                      --github-token=${{github.token}} \
                                      --pull-request=${{github.event.pull_request.number}} \
                                      --behavior=delete-and-new