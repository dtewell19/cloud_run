name: 'Terraform CI'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest

    steps:
    - name: checkout source code
      uses: actions/checkout@v2

    - name: terraform plan & show
      id: plan_show
      run: |
        terraform init
        terraform validate -no-color
        terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}

  opa-test:
    name: 'opa test'
    runs-on: ubuntu-latest

    steps:
    - name: checkout source code
      uses: actions/checkout@v2

    - name: terraform plan & show
      id: plan_show
      run: |
        terraform init
        terraform validate -no-color
        terraform plan --out tfplan.binary
        terraform show -json tfplan.binary > tfplan.json
      env:
        GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
    
    - name: install conftest
      run: |
        LATEST_VERSION="$(wget -O - "https://api.github.com/repos/open-policy-agent/conftest/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c 2-)"
        wget "https://github.com/open-policy-agent/conftest/releases/download/v${LATEST_VERSION}/conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz"
        tar xzf conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz
        sudo mv conftest /usr/local/bin
    
    - name: run opa -github
      run: conftest test -o github -p "policy" --namespace "main" tfplan.json

    - name: run opa -junit
      run: conftest test -o junit -p "policy" --namespace "main" tfplan.json > results.xml

    - name: publish report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: '*.xml'